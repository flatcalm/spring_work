web.xml 설정에서 db-config.xml이 먼저 로딩되고 그 후에 servlet-config.xml과 
email-config.xml이 로딩되기 때문에 어제 주석 처리한 부분을 풀고 servlet-config에 
Hikari.properties 부분은 지워줌.

UserController에 이메일 인증 작업을 위해 메일을 보내기 위한 MailSenderService 
@Autowired 아노테이션을 이용해 빈 등록

구글 계정을 사용하려면 2단계 인증 사용 설정 후 앱 비밀번호를 발급받아야함.
gmail로 변경해 보내려면 email.properties 수정 - email-config.xml 수정 - 
MailSenderService -> setFrom 부분 수정.
네이버 계정도 2단계 인증 사용 중이라면 앱 비밀번호 발급해야 가능.

인증번호 검증 로직 추가
select는 readonly를 설정해도 값을 변경할 수 있기 때문에 따로 세팅을 해줘야함

주소 - 우편번호 자동 검색을 위한 api 추가
다음 주소 api 검색
api 추가

회원 가입 전 검증 로직 추가 후 회원가입 페이지 완성

로그인 파트
userLogin.jsp
form action은 전송 방식만 바꿔서 같은 경로로 요청을 할 것이기 때문에 작성할 필요 X

인터셉터
com.spring.myweb.util.interceptor 패키지에 UserLoginSuccessHandler 클래스 생성
인터셉터로 사용할 클래스는 HandlerInterceptor 인터페이스를 구현
인퍼페이스에서 default로 선언된 메서드는 구현을 하지 않아도 됌.

우리는 preHandler는 작성할 필요 X

인터셉터 동작을 위해 빈 등록
src\main\webapp\WEB-INF\config - 
New - Spring Bean Configuration File - interceptor-config.xml
생성 후 하단 console 탭 위 namespace 탭에서 mvc 체크 후 
beans 태그 안에 mvc가 추가되었는지 확인
web.xml - contextConfigLocation - param-value - interceptor-config 값 추가

postHandle 마저 작성
userLogin의 msg 변수를 활용하기 위해 모델앤뷰에 msg로 내용 전송


비밀번호 암호화 구현하기
비밀번호를 DB에 그대로 저장하면 정보통신법 위반
메이븐 레파지토리 접속 - spring-security - Spring Security Web - 5.3.13.RELEASE - 
pom.xml에 추가 후 저장 - 메이븐 업데이트
UserService로 이동 - 회원 가입을 담당하는 Join 메서드
// 비밀번호 암호화를 위한 BCryptPasswordEncoder 객체 생성
암호화된 비밀번호를 담아주기 위해 DB의 users 테이블의 user_pw 길이를 VARCHAR(100)으로 변경

로그인 시에도 암호화된 비밀번호를 처리하기 위해 login 메서드도 수정
BCryptPasswordEncoder를 빈으로 등록하기 위해(여러번 사용할 예정) 
servlet-config.xml로 이동 - beans:bean 태그를 이용해서 등록
UserService에도 @Autowired 태그 이용해서 등록


회원 권한이 필요한 페이지 권한 확인을 위해 인터셉터 이용
com.spring.myweb.util.interceptor 패키지에 UserAuthHandler 클래스 생성
HandlerInterceptor implements 시켜주기
권한이 있는지 없는지 먼저 검사하기 위해 컨트롤러보다 먼저 동작하는 preHandle() 이용
preHandle 메서드 작성
interceptor-config - 빈 등록
